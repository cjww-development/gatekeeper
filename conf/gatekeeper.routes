GET         /register                               controllers.ui.RegistrationController.showUserReg()
POST        /register                               controllers.ui.RegistrationController.submitUserReg()
GET         /register/email-verification            controllers.ui.EmailController.verifyUserEmailAddress(payload)


GET         /login                                  controllers.ui.LoginController.loginShow()
POST        /login                                  controllers.ui.LoginController.loginSubmit()
GET         /login/mfa-challenge                    controllers.ui.LoginController.mfaShow()
POST        /login/mfa-challenge                    controllers.ui.LoginController.mfaSubmit()
GET         /logout                                 controllers.ui.LoginController.logout()

GET         /account                                controllers.ui.AccountController.show()
GET         /account/details                        controllers.ui.AccountController.accountDetails()
POST        /account/details/update/email           controllers.ui.AccountController.updateUserEmail()
POST        /account/details/update/password        controllers.ui.AccountController.updatePassword()
POST        /account/details/update/name            controllers.ui.AccountController.updateName()
POST        /account/details/update/gender          controllers.ui.AccountController.updateGender()
POST        /account/details/update/birthday        controllers.ui.AccountController.updateBirthday()
POST        /account/details/update/address         controllers.ui.AccountController.updateAddress()
GET         /account/security                       controllers.ui.AccountController.accountSecurity()
GET         /account/security/mfa-setup             controllers.ui.AccountController.totpSetup()
POST        /account/security/mfa-setup             controllers.ui.AccountController.postTotpSetupVerification()
GET         /account/security/mfa/confirm-disable   controllers.ui.AccountController.disableMFAConfirm()
GET         /account/security/mfa/disable           controllers.ui.AccountController.disableMFA()

GET         /oauth2/authorize                       controllers.ui.OAuthController.authoriseGet(response_type, client_id, scope, state: Option[String] ?= None, code_verifier: Option[String] ?= None, code_challenge: Option[String] ?= None, code_challenge_method: Option[String] ?= None)
POST        /oauth2/authorize                       controllers.ui.OAuthController.authorisePost(response_type, client_id, scope, state: Option[String] ?= None, code_verifier: Option[String] ?= None, code_challenge: Option[String] ?= None, code_challenge_method: Option[String] ?= None)

+ NOCSRF
POST        /oauth2/token                           controllers.ui.OAuthController.getToken()

GET         /clients                                controllers.ui.ClientController.getAllClients(groupedBy: Int ?= 5)
GET         /clients/authorised                     controllers.ui.ClientController.getAuthorisedAppsForUser()
GET         /client/authorised                      controllers.ui.ClientController.getAuthorisedApp(appId)
GET         /client/revoke/app                      controllers.ui.ClientController.revokeAppAccess(appId)
GET         /client/revoke/session                  controllers.ui.ClientController.revokeSession(tokenSetId, appId)
GET         /client/register                        controllers.ui.ClientController.showAppReg()
POST        /client/register                        controllers.ui.ClientController.submitAppReg()
GET         /client                                 controllers.ui.ClientController.getClientDetails(appId)
GET         /client/regenerate                      controllers.ui.ClientController.regenerateIdAndSecretShow(appId)
POST        /client/regenerate                      controllers.ui.ClientController.regenerateIdAndSecretSubmit(appId)
GET         /client/delete                          controllers.ui.ClientController.deleteClientShow(appId)
POST        /client/delete                          controllers.ui.ClientController.deleteClientSubmit(appId)
POST        /client/update/flows                    controllers.ui.ClientController.updateOAuthFlows(appId)
POST        /client/update/scopes                   controllers.ui.ClientController.updateOAuthScopes(appId)
POST        /client/update/expiry                   controllers.ui.ClientController.updateTokenExpiry(appId)
POST        /client/update/urls                     controllers.ui.ClientController.updateHomeAndRedirect(appId)

GET         /assets/*file                           controllers.Assets.at(path="/public", file)
